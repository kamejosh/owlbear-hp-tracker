/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login For Access Token */
        post: operations["login_for_access_token_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Refresh Access Token */
        get: operations["refresh_access_token_refresh_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/password-reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset Password */
        post: operations["reset_password_password_reset_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/activation-link": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Activation Mail */
        post: operations["get_activation_mail_activation_link_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stats */
        get: operations["get_stats_stats__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create User */
        post: operations["create_user_api_v1_users__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/{user_id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update User Roles */
        patch: operations["update_user_roles_api_v1_users__user_id__roles_patch"];
        trace?: never;
    };
    "/api/v1/users/me/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Users Me */
        get: operations["get_users_me_api_v1_users_me__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update User */
        patch: operations["update_user_api_v1_users_me__patch"];
        trace?: never;
    };
    "/api/v1/users/me/api_keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Api Keys */
        get: operations["list_api_keys_api_v1_users_me_api_keys_get"];
        /** Update Api Keys */
        put: operations["update_api_keys_api_v1_users_me_api_keys_put"];
        post?: never;
        /** Update Api Keys */
        delete: operations["update_api_keys_api_v1_users_me_api_keys_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me/statblocks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Statblocks */
        get: operations["list_statblocks_api_v1_users_me_statblocks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me/spells": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Spells */
        get: operations["list_spells_api_v1_users_me_spells_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Items */
        get: operations["list_items_api_v1_users_me_items_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Change Password */
        post: operations["change_password_api_v1_users_change_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/activate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Activate User */
        post: operations["activate_user_api_v1_users_activate_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User Settings */
        get: operations["get_user_settings_api_v1_users_me_settings_get"];
        /** Put User Settings */
        put: operations["put_user_settings_api_v1_users_me_settings_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/statblock/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Pf Statblocks */
        get: operations["list_pf_statblocks_api_v1_pf_statblock__get"];
        put?: never;
        /** Create Pf Statblock */
        post: operations["create_pf_statblock_api_v1_pf_statblock__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/statblock/search/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Pf Statblock */
        get: operations["search_pf_statblock_api_v1_pf_statblock_search__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/statblock/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pf Statblock Slug */
        get: operations["get_pf_statblock_slug_api_v1_pf_statblock__slug__get"];
        /** Edit Pf Statblock */
        put: operations["edit_pf_statblock_api_v1_pf_statblock__slug__put"];
        post?: never;
        /** Delete Pf Statblock */
        delete: operations["delete_pf_statblock_api_v1_pf_statblock__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/statblock/{slug}/active": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Set Active Pf Statblock */
        put: operations["set_active_pf_statblock_api_v1_pf_statblock__slug__active_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/spell/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Pf Spells */
        get: operations["list_pf_spells_api_v1_pf_spell__get"];
        put?: never;
        /** Create Spell */
        post: operations["create_spell_api_v1_pf_spell__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/spell/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Pf Spell */
        get: operations["search_pf_spell_api_v1_pf_spell_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pf/spell/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pf Spells Slug */
        get: operations["get_pf_spells_slug_api_v1_pf_spell__slug__get"];
        /** Update Pf Spell */
        put: operations["update_pf_spell_api_v1_pf_spell__slug__put"];
        post?: never;
        /** Delete Pf Spell */
        delete: operations["delete_pf_spell_api_v1_pf_spell__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/statblock/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List E5 Statblocks */
        get: operations["list_e5_statblocks_api_v1_e5_statblock__get"];
        put?: never;
        /** Create E5 Statblock */
        post: operations["create_e5_statblock_api_v1_e5_statblock__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/statblock/search/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search E5 Creature */
        get: operations["search_e5_creature_api_v1_e5_statblock_search__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/statblock/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get E5 Statblock Slug */
        get: operations["get_e5_statblock_slug_api_v1_e5_statblock__slug__get"];
        /** Edit E5 Statblock */
        put: operations["edit_e5_statblock_api_v1_e5_statblock__slug__put"];
        post?: never;
        /** Delete E5 Statblock */
        delete: operations["delete_e5_statblock_api_v1_e5_statblock__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/statblock/{slug}/active": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Set Active E5 Statblock */
        put: operations["set_active_e5_statblock_api_v1_e5_statblock__slug__active_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/statblock/external": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Statblock From External Source */
        post: operations["create_statblock_from_external_source_api_v1_e5_statblock_external_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/spell/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List E5 Spells */
        get: operations["list_e5_spells_api_v1_e5_spell__get"];
        put?: never;
        /** Create Spell */
        post: operations["create_spell_api_v1_e5_spell__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/spell/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search E5 Spell */
        get: operations["search_e5_spell_api_v1_e5_spell_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/spell/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get E5 Spells Slug */
        get: operations["get_e5_spells_slug_api_v1_e5_spell__slug__get"];
        /** Update E5 Spell */
        put: operations["update_e5_spell_api_v1_e5_spell__slug__put"];
        post?: never;
        /** Delete E5 Spell */
        delete: operations["delete_e5_spell_api_v1_e5_spell__slug__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/encounter/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get E5 Encounters */
        get: operations["get_e5_encounters_api_v1_e5_encounter__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/item/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List E5 Items */
        get: operations["list_e5_items_api_v1_e5_item__get"];
        put?: never;
        /** Create Item */
        post: operations["create_item_api_v1_e5_item__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/item/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Items */
        get: operations["search_items_api_v1_e5_item_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/e5/item/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get E5 Item Slug */
        get: operations["get_e5_item_slug_api_v1_e5_item__slug__get"];
        put?: never;
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_api_v1_e5_item__slug__delete"];
        options?: never;
        head?: never;
        /** Edit Item */
        patch: operations["edit_item_api_v1_e5_item__slug__patch"];
        trace?: never;
    };
    "/legal/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Legal */
        get: operations["get_legal_legal__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Users */
        get: operations["list_users_admin_users_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/users/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Users */
        get: operations["search_users_admin_users_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/users/{username}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update User */
        put: operations["update_user_admin_users__username__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Action */
        "Action-Output": {
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus?: ("STR" | "DEX" | "CON" | "INT" | "WIS" | "CHA")[] | null;
            /** Use Proficiency */
            use_proficiency?: boolean | null;
            /** Damage Dice */
            damage_dice?: string | null;
            limit?: components["schemas"]["src__types__base__LimitedUse"] | null;
        };
        /** ActionOut */
        ActionOut: {
            /** Name */
            name: string;
            type: components["schemas"]["ActionTypeEnumOut"];
            /** Description */
            description?: string | null;
            /** Damage */
            damage?: string | null;
            /** Trigger */
            trigger?: string | null;
            /** Requirements */
            requirements?: string | null;
            /** Effect */
            effect?: string | null;
            /** Frequency */
            frequency?: string | null;
            /** Success */
            success?: string | null;
            /** Critical Success */
            critical_success?: string | null;
            /** Failure */
            failure?: string | null;
            /** Critical Failure */
            critical_failure?: string | null;
            /** Constant */
            constant?: string | null;
            limit?: components["schemas"]["src__types__base__LimitedUse"] | null;
        };
        /**
         * ActionTypeEnum
         * @enum {string}
         */
        ActionTypeEnum: "free-action" | "one-action" | "two-actions" | "three-actions";
        /**
         * ActionTypeEnumOut
         * @enum {string}
         */
        ActionTypeEnumOut: "FREE" | "ONE" | "TWO" | "THREE";
        /** ArmorClass */
        ArmorClass: {
            /** Value */
            value: number;
            /** Special */
            special?: string | null;
        };
        /** Bloodline */
        Bloodline: {
            /** Name */
            name: string;
        };
        /** Body_login_for_access_token_token_post */
        Body_login_for_access_token_token_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** Cast */
        Cast: {
            /** Type */
            type: string;
            /** Somatic */
            somatic: boolean;
            /** Verbal */
            verbal: boolean;
            /** Material */
            material: boolean;
            /** Cost */
            cost?: string | null;
        };
        /**
         * Cost
         * @description Represents a Cost record
         */
        Cost: {
            /** Id */
            id: number;
            /** Cp */
            cp?: number | null;
            /** Sp */
            sp?: number | null;
            /** Ep */
            ep?: number | null;
            /** Gp */
            gp?: number | null;
            /** Pp */
            pp?: number | null;
            item?: components["schemas"]["e5_Item"] | null;
            /** Itemid */
            itemId: number;
        };
        /** CostIn */
        CostIn: {
            /**
             * Cp
             * @default 0
             */
            cp: number | null;
            /**
             * Sp
             * @default 0
             */
            sp: number | null;
            /**
             * Ep
             * @default 0
             */
            ep: number | null;
            /**
             * Gp
             * @default 0
             */
            gp: number | null;
            /**
             * Pp
             * @default 0
             */
            pp: number | null;
        };
        /** CostOut */
        CostOut: {
            /**
             * Cp
             * @default 0
             */
            cp: number | null;
            /**
             * Sp
             * @default 0
             */
            sp: number | null;
            /**
             * Ep
             * @default 0
             */
            ep: number | null;
            /**
             * Gp
             * @default 0
             */
            gp: number | null;
            /**
             * Pp
             * @default 0
             */
            pp: number | null;
            /** Id */
            id: number;
        };
        /** Deity */
        Deity: {
            /** Name */
            name: string;
        };
        /** Description */
        Description: {
            /** Text */
            text: string;
            /** Details */
            details?: components["schemas"]["Detail"][];
        };
        /** Detail */
        Detail: {
            /** Title */
            title?: string | null;
            /** Text */
            text: string;
        };
        /** Domain */
        Domain: {
            /** Name */
            name: string;
        };
        /** E5StatblockIn */
        E5StatblockIn: {
            /** Name */
            name: string;
            /** About */
            about?: string | null;
            /** Size */
            size: string;
            /** Type */
            type: string;
            /** Subtype */
            subtype?: string | null;
            /** Group */
            group?: string | null;
            /**
             * Alignment
             * @default
             */
            alignment: string;
            armor_class: components["schemas"]["ArmorClass"];
            hp: components["schemas"]["src__types__e5__base__Hitpoints"];
            speed: components["schemas"]["Speed"];
            stats: components["schemas"]["src__types__e5__base__Stats"];
            saving_throws: components["schemas"]["src__types__e5__base__SavingThrows"];
            /** Initiative */
            initiative?: number | null;
            /** Proficiency Bonus */
            proficiency_bonus?: number | null;
            skills?: components["schemas"]["Skills"] | null;
            /** Damage Vulnerabilities */
            damage_vulnerabilities?: string | null;
            /** Damage Resistances */
            damage_resistances?: string | null;
            /** Damage Immunities */
            damage_immunities?: string | null;
            /** Condition Immunities */
            condition_immunities?: string | null;
            /** Senses */
            senses?: string[] | null;
            /** Languages */
            languages?: string[] | null;
            /** Items */
            items?: string[] | null;
            /** Equipment */
            equipment?: components["schemas"]["StatblockItemIn"][] | null;
            /** Challenge Rating */
            challenge_rating?: string | null;
            /** Cr */
            cr?: number | null;
            /** Actions */
            actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Lair Actions */
            lair_actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Mythic Actions */
            mythic_actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Legendary Desc */
            legendary_desc?: string | null;
            /** Legendary Actions */
            legendary_actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Spell Slots */
            spell_slots?: components["schemas"]["SpellSlots-Input"][] | null;
            /** Spells */
            spells?: string[] | null;
            /** Spell Dc */
            spell_dc?: string | null;
            /** Spell Attack */
            spell_attack?: string | null;
            /** Limits */
            limits?: components["schemas"]["LimitedUse-Input"][] | null;
            /** Source */
            source?: string | null;
        };
        /** E5StatblockOut */
        E5StatblockOut: {
            /** Name */
            name: string;
            /** About */
            about?: string | null;
            /** Size */
            size: string;
            /** Type */
            type: string;
            /** Subtype */
            subtype?: string | null;
            /** Group */
            group?: string | null;
            /**
             * Alignment
             * @default
             */
            alignment: string;
            armor_class: components["schemas"]["ArmorClass"];
            hp: components["schemas"]["src__types__e5__base__Hitpoints"];
            speed: components["schemas"]["Speed"];
            stats: components["schemas"]["src__types__e5__base__Stats"];
            saving_throws: components["schemas"]["src__types__e5__base__SavingThrows"];
            /** Initiative */
            initiative?: number | null;
            /** Proficiency Bonus */
            proficiency_bonus?: number | null;
            skills?: components["schemas"]["Skills"] | null;
            /** Damage Vulnerabilities */
            damage_vulnerabilities?: string | null;
            /** Damage Resistances */
            damage_resistances?: string | null;
            /** Damage Immunities */
            damage_immunities?: string | null;
            /** Condition Immunities */
            condition_immunities?: string | null;
            /** Senses */
            senses?: string[] | null;
            /** Languages */
            languages?: string[] | null;
            /** Items */
            items?: string[] | null;
            /** Equipment */
            equipment?: components["schemas"]["StatblockItemOut"][];
            /** Challenge Rating */
            challenge_rating?: string | null;
            /** Cr */
            cr?: number | null;
            /** Actions */
            actions?: components["schemas"]["Action-Output"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["Action-Output"][] | null;
            /** Lair Actions */
            lair_actions?: components["schemas"]["Action-Output"][] | null;
            /** Mythic Actions */
            mythic_actions?: components["schemas"]["Action-Output"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["Action-Output"][] | null;
            /** Legendary Desc */
            legendary_desc?: string | null;
            /** Legendary Actions */
            legendary_actions?: components["schemas"]["Action-Output"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["Action-Output"][] | null;
            /** Spell Slots */
            spell_slots?: components["schemas"]["SpellSlots-Output"][] | null;
            /** Spells */
            spells?: components["schemas"]["src__types__e5__spell__Spell"][];
            /** Spell Dc */
            spell_dc?: string | null;
            /** Spell Attack */
            spell_attack?: string | null;
            /** Limits */
            limits?: components["schemas"]["src__types__base__LimitedUse"][] | null;
            /** Source */
            source?: string | null;
            /** Slug */
            slug: string;
            /** External Id */
            external_id: string | null;
            /** License */
            license?: string | null;
            /**
             * Active
             * @default false
             */
            active: boolean;
        };
        /** ExternalIn */
        ExternalIn: {
            /** Id */
            id: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Heightened */
        Heightened: {
            /** Modifier */
            modifier: string;
            /** Description */
            description: string;
        };
        /** Info */
        Info: {
            /**
             * Type
             * @enum {string}
             */
            type: "Cantrip" | "Focus" | "Spell";
            /** Level */
            level: number;
        };
        /** ItemBonusIn */
        ItemBonusIn: {
            /** Hp */
            hp?: number | null;
            /** Armor Class */
            armor_class?: number | null;
            /** Damage Vulnerabilities */
            damage_vulnerabilities?: string | null;
            /** Damage Resistances */
            damage_resistances?: string | null;
            /** Damage Immunities */
            damage_immunities?: string | null;
            /** Condition Immunities */
            condition_immunities?: string | null;
            /** Senses */
            senses?: string[] | null;
            /** Proficiency */
            proficiency?: string[] | null;
            /** Actions */
            actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            stats?: components["schemas"]["src__types__e5__base__Stats"] | null;
            speed?: components["schemas"]["Speed"] | null;
            saving_throws?: components["schemas"]["src__types__e5__base__SavingThrows"] | null;
            skills?: components["schemas"]["Skills"] | null;
        };
        /** ItemBonusOut */
        ItemBonusOut: {
            /** Hp */
            hp?: number | null;
            /** Armor Class */
            armor_class?: number | null;
            /** Damage Vulnerabilities */
            damage_vulnerabilities?: string | null;
            /** Damage Resistances */
            damage_resistances?: string | null;
            /** Damage Immunities */
            damage_immunities?: string | null;
            /** Condition Immunities */
            condition_immunities?: string | null;
            /** Senses */
            senses?: string[] | null;
            /** Proficiency */
            proficiency?: string[] | null;
            /** Actions */
            actions?: components["schemas"]["Action-Output"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["Action-Output"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["Action-Output"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["Action-Output"][] | null;
            stats?: components["schemas"]["src__types__e5__base__Stats"] | null;
            speed?: components["schemas"]["Speed"] | null;
            saving_throws?: components["schemas"]["src__types__e5__base__SavingThrows"] | null;
            skills?: components["schemas"]["Skills"] | null;
            /** Id */
            id: number;
        };
        /** ItemIn */
        ItemIn: {
            /** Tags */
            tags?: string[] | null;
            /** Name */
            name: string;
            /** Type */
            type?: string | null;
            /** Description */
            description?: string | null;
            /** Rarity */
            rarity?: ("Common" | "Uncommon" | "Rare" | "Very Rare" | "Legendary") | null;
            /** Sentient */
            sentient?: boolean | null;
            /** Can Equip */
            can_equip?: boolean | null;
            /** Requires Attuning */
            requires_attuning?: boolean | null;
            cost?: components["schemas"]["CostIn"] | null;
            /** Weight */
            weight?: number | null;
            /** Range */
            range?: string | null;
            /** Spells */
            spells?: components["schemas"]["ItemSpellIn"][] | null;
            charges?: components["schemas"]["LimitedUse-Input"] | null;
            stats?: components["schemas"]["ItemStatsIn"] | null;
            bonus?: components["schemas"]["ItemBonusIn"] | null;
            modifiers?: components["schemas"]["ItemModifiersIn"] | null;
        };
        /** ItemModifiersIn */
        ItemModifiersIn: {
            /** Stats */
            stats?: components["schemas"]["ModifierStats"][] | null;
        };
        /** ItemModifiersOut */
        ItemModifiersOut: {
            /** Stats */
            stats?: components["schemas"]["ModifierStats"][] | null;
            /** Id */
            id: number;
        };
        /** ItemOut */
        ItemOut: {
            /** Tags */
            tags?: string[] | null;
            /** Name */
            name: string;
            /** Type */
            type?: string | null;
            /** Description */
            description?: string | null;
            /** Rarity */
            rarity?: ("Common" | "Uncommon" | "Rare" | "Very Rare" | "Legendary") | null;
            /** Sentient */
            sentient?: boolean | null;
            /** Can Equip */
            can_equip?: boolean | null;
            /** Requires Attuning */
            requires_attuning?: boolean | null;
            cost?: components["schemas"]["CostOut"] | null;
            /** Weight */
            weight?: number | null;
            /** Range */
            range?: string | null;
            /** Spells */
            spells?: components["schemas"]["ItemSpellOut"][];
            charges?: components["schemas"]["src__types__base__LimitedUse"] | null;
            stats?: components["schemas"]["ItemStatsOut"] | null;
            bonus?: components["schemas"]["ItemBonusOut"] | null;
            modifiers?: components["schemas"]["ItemModifiersOut"] | null;
            /** Id */
            id: number;
            /** Slug */
            slug: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Active
             * @default false
             */
            active: boolean;
            /** Source */
            source?: string | null;
            /** License */
            license?: string | null;
        };
        /** ItemSpellIn */
        ItemSpellIn: {
            /** Slug */
            slug: string;
            /** Charges */
            charges: number;
        };
        /** ItemSpellOut */
        ItemSpellOut: {
            /** Id */
            id: number;
            spell: components["schemas"]["src__types__e5__spell__Spell"];
            /** Charges */
            charges: number;
        };
        /** ItemStatsIn */
        ItemStatsIn: {
            armor_class?: components["schemas"]["ArmorClass"] | null;
            hp?: components["schemas"]["src__types__e5__base__Hitpoints"] | null;
            /** Senses */
            senses?: string[] | null;
            /** Languages */
            languages?: string[] | null;
            /** Actions */
            actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["src__types__e5__base__Action-Input"][] | null;
            /** Spell Dc */
            spell_dc?: string | null;
            /** Spell Attack */
            spell_attack?: string | null;
            stats?: components["schemas"]["src__types__e5__base__Stats"] | null;
            speed?: components["schemas"]["Speed"] | null;
            saving_throws?: components["schemas"]["src__types__e5__base__SavingThrows"] | null;
            skills?: components["schemas"]["Skills"] | null;
        };
        /** ItemStatsOut */
        ItemStatsOut: {
            armor_class?: components["schemas"]["ArmorClass"] | null;
            hp?: components["schemas"]["src__types__e5__base__Hitpoints"] | null;
            /** Senses */
            senses?: string[] | null;
            /** Languages */
            languages?: string[] | null;
            /** Actions */
            actions?: components["schemas"]["Action-Output"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["Action-Output"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["Action-Output"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["Action-Output"][] | null;
            /** Spell Dc */
            spell_dc?: string | null;
            /** Spell Attack */
            spell_attack?: string | null;
            stats?: components["schemas"]["src__types__e5__base__Stats"] | null;
            speed?: components["schemas"]["Speed"] | null;
            saving_throws?: components["schemas"]["src__types__e5__base__SavingThrows"] | null;
            skills?: components["schemas"]["Skills"] | null;
            /** Id */
            id: number;
        };
        /** LimitedUse */
        "LimitedUse-Input": {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Uses */
            uses: number;
            /** Resets */
            resets?: string[];
        };
        /** ModifierStats */
        ModifierStats: {
            /**
             * Stat Name
             * @enum {string}
             */
            stat_name: "strength" | "dexterity" | "constitution" | "intelligence" | "wisdom" | "charisma";
            /** Increase */
            increase: boolean;
            /** Decrease */
            decrease: boolean;
            /** Value */
            value: number;
        };
        /** Mystery */
        Mystery: {
            /** Name */
            name: string;
        };
        /** PFStatblockIn */
        PFStatblockIn: {
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Level */
            level: number;
            /** Traits */
            traits: components["schemas"]["Trait"][];
            /** Senses */
            senses?: string[] | null;
            /** Perception */
            perception?: string | null;
            /** Languages */
            languages?: string[] | null;
            /** Skills */
            skills?: components["schemas"]["Skill"][] | null;
            stats: components["schemas"]["src__types__pf__statblock__Stats"];
            /** Items */
            items?: string[];
            armor_class: components["schemas"]["ArmorClass"];
            saving_throws: components["schemas"]["src__types__pf__statblock__SavingThrows"];
            hp: components["schemas"]["src__types__pf__statblock__Hitpoints"];
            /** Immunities */
            immunities?: string[];
            /** Weaknesses */
            weaknesses?: string[];
            /** Resistances */
            resistances?: string[];
            /** Speed */
            speed: string;
            /** Actions */
            actions?: components["schemas"]["src__types__pf__statblock__Action"][];
            /** Reactions */
            reactions?: components["schemas"]["Reaction-Input"][];
            /** Spells */
            spells?: components["schemas"]["SpellCategory"][];
            /** About */
            about?: string | null;
            /** Limits */
            limits?: components["schemas"]["LimitedUse-Input"][];
            /** Special Abilities */
            special_abilities?: components["schemas"]["SpecialAbility-Input"][];
        };
        /** PFStatblockOut */
        PFStatblockOut: {
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Level */
            level: number;
            /** Traits */
            traits: components["schemas"]["Trait"][];
            /** Senses */
            senses?: string[] | null;
            /** Perception */
            perception?: string | null;
            /** Languages */
            languages?: string[] | null;
            /** Skills */
            skills?: components["schemas"]["Skill"][] | null;
            stats: components["schemas"]["src__types__pf__statblock__Stats"];
            /** Items */
            items?: string[];
            armor_class: components["schemas"]["ArmorClass"];
            saving_throws: components["schemas"]["src__types__pf__statblock__SavingThrows"];
            hp: components["schemas"]["src__types__pf__statblock__Hitpoints"];
            /** Immunities */
            immunities?: string[];
            /** Weaknesses */
            weaknesses?: string[];
            /** Resistances */
            resistances?: string[];
            /** Speed */
            speed: string;
            /** Actions */
            actions: components["schemas"]["ActionOut"][];
            /** Reactions */
            reactions?: components["schemas"]["Reaction-Output"][];
            /** Spells */
            spells: components["schemas"]["SpellCategoryOut"][];
            /** About */
            about?: string | null;
            /** Limits */
            limits?: components["schemas"]["src__types__base__LimitedUse"][];
            /** Special Abilities */
            special_abilities?: components["schemas"]["SpecialAbility-Output"][];
            /** Slug */
            slug: string;
            /** Active */
            active: boolean;
            /** Source */
            source?: string | null;
        };
        /** PasswordResetIn */
        PasswordResetIn: {
            /** Token */
            token: string;
            /** Password */
            password: string;
        };
        /** Reaction */
        "Reaction-Input": {
            /** Name */
            name: string;
            /** Trigger */
            trigger?: string | null;
            /** Frequency */
            frequency?: string | null;
            /** Requirements */
            requirements?: string | null;
            /** Effect */
            effect?: string | null;
            /** Damage */
            damage?: string | null;
            /** Success */
            success?: string | null;
            /** Critical Success */
            critical_success?: string | null;
            /** Failure */
            failure?: string | null;
            /** Critical Failure */
            critical_failure?: string | null;
            limit?: components["schemas"]["LimitedUse-Input"] | null;
        };
        /** Reaction */
        "Reaction-Output": {
            /** Name */
            name: string;
            /** Trigger */
            trigger?: string | null;
            /** Frequency */
            frequency?: string | null;
            /** Requirements */
            requirements?: string | null;
            /** Effect */
            effect?: string | null;
            /** Damage */
            damage?: string | null;
            /** Success */
            success?: string | null;
            /** Critical Success */
            critical_success?: string | null;
            /** Failure */
            failure?: string | null;
            /** Critical Failure */
            critical_failure?: string | null;
            limit?: components["schemas"]["src__types__base__LimitedUse"] | null;
        };
        /** Settings */
        Settings: {
            /**
             * Crit Rules
             * @default none
             * @enum {string}
             */
            crit_rules: "none" | "double_dice" | "double_role" | "max_roll";
            /**
             * Death Saves
             * @default false
             */
            death_saves: boolean;
            /**
             * Gm Rolls Hidden
             * @default false
             */
            gm_rolls_hidden: boolean;
            /** Default Groups */
            default_groups?: string[];
        };
        /** Skill */
        Skill: {
            /** Name */
            name: string;
            /** Value */
            value: string;
        };
        /** Skills */
        Skills: {
            /** Acrobatics */
            acrobatics?: number | null;
            /** Animal Handling */
            animal_handling?: number | null;
            /** Arcana */
            arcana?: number | null;
            /** Athletics */
            athletics?: number | null;
            /** Deception */
            deception?: number | null;
            /** History */
            history?: number | null;
            /** Insight */
            insight?: number | null;
            /** Intimidation */
            intimidation?: number | null;
            /** Investigation */
            investigation?: number | null;
            /** Medicine */
            medicine?: number | null;
            /** Nature */
            nature?: number | null;
            /** Perception */
            perception?: number | null;
            /** Performance */
            performance?: number | null;
            /** Persuasion */
            persuasion?: number | null;
            /** Religion */
            religion?: number | null;
            /** Sleight Of Hand */
            sleight_of_hand?: number | null;
            /** Stealth */
            stealth?: number | null;
            /** Survival */
            survival?: number | null;
        };
        /** SpecialAbility */
        "SpecialAbility-Input": {
            /** Name */
            name: string;
            /** Description */
            description: string;
            limit?: components["schemas"]["LimitedUse-Input"] | null;
        };
        /** SpecialAbility */
        "SpecialAbility-Output": {
            /** Name */
            name: string;
            /** Description */
            description: string;
            limit?: components["schemas"]["src__types__base__LimitedUse"] | null;
        };
        /** Speed */
        Speed: {
            /** Walk */
            walk?: number | null;
            /** Fly */
            fly?: number | null;
            /** Swim */
            swim?: number | null;
            /** Climb */
            climb?: number | null;
            /** Burrow */
            burrow?: number | null;
            /** Hover */
            hover?: number | null;
            /** Lightwalking */
            lightwalking?: number | null;
            /** Notes */
            notes?: string | null;
        };
        /** SpellArchetype */
        SpellArchetype: {
            /** Name */
            name: string;
        };
        /** SpellCategory */
        SpellCategory: {
            /** Name */
            name: string;
            /** Dc */
            dc: number;
            /** Attack */
            attack?: number | null;
            /** Spell Lists */
            spell_lists?: components["schemas"]["Spelllist"][];
        };
        /** SpellCategoryOut */
        SpellCategoryOut: {
            /** Name */
            name: string;
            /** Dc */
            dc: number;
            /** Attack */
            attack?: number | null;
            /** Spell Lists */
            spell_lists: components["schemas"]["SpelllistOut"][];
        };
        /** SpellCircle */
        SpellCircle: {
            /** Name */
            name: string;
        };
        /** SpellClass */
        SpellClass: {
            /** Name */
            name: string;
        };
        /** SpellInfo */
        SpellInfo: {
            /** Name */
            name: string;
        };
        /** SpellOut */
        SpellOut: {
            /** Name */
            name: string;
            info: components["schemas"]["Info"];
            /** Traits */
            traits: components["schemas"]["SpellTrait"][];
            /** Traditions */
            traditions: components["schemas"]["Tradition"][];
            /** Bloodlines */
            bloodlines: components["schemas"]["Bloodline"][];
            /** Deities */
            deities: components["schemas"]["Deity"][];
            /** Domains */
            domains: components["schemas"]["Domain"][];
            /** Mysteries */
            mysteries: components["schemas"]["Mystery"][];
            /** Range */
            range?: string | null;
            /** Area */
            area?: string | null;
            /** Targets */
            targets?: string | null;
            /** Duration */
            duration?: string | null;
            /** Saving Throws */
            saving_throws?: string | null;
            /** Trigger */
            trigger?: string | null;
            cast: components["schemas"]["Cast"];
            description?: components["schemas"]["Description"] | null;
            /** Heightened */
            heightened?: components["schemas"]["Heightened"][] | null;
            /** Slug */
            slug: string;
            /** License */
            license?: string | null;
            /** Active */
            active: boolean;
            /** Source */
            source?: string | null;
        };
        /** SpellSchool */
        SpellSchool: {
            /** Name */
            name: string;
        };
        /** SpellSlots */
        "SpellSlots-Input": {
            /** Level */
            level: number;
            limit: components["schemas"]["LimitedUse-Input"];
        };
        /** SpellSlots */
        "SpellSlots-Output": {
            /** Level */
            level: number;
            limit: components["schemas"]["src__types__base__LimitedUse"];
        };
        /** SpellStatblockOut */
        SpellStatblockOut: {
            /** Name */
            name: string;
            info?: components["schemas"]["Info"] | null;
            /** Traits */
            traits?: components["schemas"]["SpellTrait"][] | null;
            /** Traditions */
            traditions?: components["schemas"]["Tradition"][] | null;
            /** Bloodlines */
            bloodlines?: components["schemas"]["Bloodline"][] | null;
            /** Deities */
            deities?: components["schemas"]["Deity"][] | null;
            /** Domains */
            domains?: components["schemas"]["Domain"][] | null;
            /** Mysteries */
            mysteries?: components["schemas"]["Mystery"][] | null;
            /** Range */
            range?: string | null;
            /** Area */
            area?: string | null;
            /** Targets */
            targets?: string | null;
            /** Duration */
            duration?: string | null;
            /** Saving Throws */
            saving_throws?: string | null;
            /** Trigger */
            trigger?: string | null;
            cast?: components["schemas"]["Cast"] | null;
            description?: components["schemas"]["Description"] | null;
            /** Heightened */
            heightened?: components["schemas"]["Heightened"][] | null;
            /** Slug */
            slug: string;
            /** License */
            license?: string | null;
            /** Active */
            active: boolean;
            /** Source */
            source?: string | null;
        };
        /** SpellTrait */
        SpellTrait: {
            /** Name */
            name: string;
        };
        /** Spelllist */
        Spelllist: {
            /** Type */
            type: string;
            /** Level */
            level: string;
            /** Spells */
            spells: components["schemas"]["SpellInfo"][];
            limit?: components["schemas"]["LimitedUse-Input"] | null;
        };
        /** SpelllistOut */
        SpelllistOut: {
            /** Type */
            type: string;
            /** Level */
            level: string;
            /** Spells */
            spells: components["schemas"]["SpellStatblockOut"][];
            limit?: components["schemas"]["src__types__base__LimitedUse"] | null;
        };
        /** StatblockItemIn */
        StatblockItemIn: {
            /** Equipped */
            equipped?: boolean | null;
            /** Attuned */
            attuned?: boolean | null;
            /** Loot */
            loot?: boolean | null;
            /** Proficient */
            proficient?: boolean | null;
            /** Item */
            item: number;
        };
        /** StatblockItemOut */
        StatblockItemOut: {
            /** Id */
            id: number;
            /** Equipped */
            equipped: boolean;
            /** Attuned */
            attuned: boolean;
            /** Loot */
            loot: boolean;
            /** Proficient */
            proficient: boolean;
            item: components["schemas"]["ItemOut"];
        };
        /** Tradition */
        Tradition: {
            /** Name */
            name: string;
        };
        /** Trait */
        Trait: {
            /** Name */
            name: string;
            /** Value */
            value: string;
        };
        /** UpdateUserIn */
        UpdateUserIn: {
            /** Email */
            email?: string | null;
            /** Password */
            password?: string | null;
        };
        /**
         * User
         * @description Represents a User record
         */
        User: {
            /** Id */
            id: string;
            /** Email */
            email: string;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /** Active */
            active: boolean;
            /** Api Keys */
            api_keys: string[];
            /** Scopes */
            scopes: string[];
            /** Ips */
            ips: string[];
            /** Pfstatblocks */
            pfstatblocks?: components["schemas"]["pf_StatBlock"][] | null;
            /** E5Statblocks */
            e5statblocks?: components["schemas"]["e5_StatBlock"][] | null;
            stats?: components["schemas"]["prisma__models__Stats"] | null;
            /** Settings */
            settings: unknown;
            /** E5 Spell */
            e5_Spell?: components["schemas"]["e5_Spell"][] | null;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
            /** E5 Item */
            e5_Item?: components["schemas"]["e5_Item"][] | null;
        };
        /** UserAdminInfo */
        UserAdminInfo: {
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Scopes */
            scopes: string[];
            /** Active */
            active: boolean;
            /** Statblocks */
            statblocks: number;
            /** Spells */
            spells: number;
        };
        /** UserIn */
        UserIn: {
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Password */
            password: string;
        };
        /** UserOut */
        UserOut: {
            /** Username */
            username: string;
            /** Email */
            email: string;
        };
        /** UserPartial */
        UserPartial: {
            /** Username */
            username: string;
        };
        /** UserSpells */
        UserSpells: {
            /** E5 */
            e5: components["schemas"]["src__types__e5__spell__Spell"][];
            /** Pf */
            pf: components["schemas"]["SpellOut"][];
        };
        /** UserStatblocks */
        UserStatblocks: {
            /** E5 */
            e5: components["schemas"]["E5StatblockOut"][];
            /** Pf */
            pf: components["schemas"]["PFStatblockOut"][];
        };
        /** UserWithApiKey */
        UserWithApiKey: {
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Api Keys */
            api_keys: string[];
        };
        /** UserWithScopes */
        UserWithScopes: {
            /** Username */
            username: string;
            /** Email */
            email: string;
            /** Scopes */
            scopes: string[];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * e5_Action
         * @description Represents a e5_Action record
         */
        e5_Action: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
            e5_ItemStats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
            e5_ItemBonus?: components["schemas"]["e5_ItemBonus"] | null;
            /** E5 Itembonusid */
            e5_ItemBonusId?: number | null;
        };
        /**
         * e5_ArmorClass
         * @description Represents a e5_ArmorClass record
         */
        e5_ArmorClass: {
            /** Id */
            id: string;
            /** Value */
            value: number;
            /** Special */
            special?: string | null;
            /** E5 Statblock */
            e5_StatBlock?: components["schemas"]["e5_StatBlock"][] | null;
            item?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
        };
        /**
         * e5_BonusAction
         * @description Represents a e5_BonusAction record
         */
        e5_BonusAction: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
            e5_ItemStats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
            e5_ItemBonus?: components["schemas"]["e5_ItemBonus"] | null;
            /** E5 Itembonusid */
            e5_ItemBonusId?: number | null;
        };
        /**
         * e5_Hitpoints
         * @description Represents a e5_Hitpoints record
         */
        e5_Hitpoints: {
            /** Id */
            id: string;
            /** Value */
            value: number;
            /** Hit Dice */
            hit_dice?: string | null;
            /** E5 Statblock */
            e5_StatBlock?: components["schemas"]["e5_StatBlock"][] | null;
            item?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
        };
        /**
         * e5_Item
         * @description Represents a e5_Item record
         */
        e5_Item: {
            /** Id */
            id: number;
            /** Slug */
            slug: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Tags */
            tags: string[];
            /** Name */
            name: string;
            /** Type */
            type?: string | null;
            /** Description */
            description?: string | null;
            /** Rarity */
            rarity?: string | null;
            /** Sentient */
            sentient?: boolean | null;
            /** Can Equip */
            can_equip?: boolean | null;
            /** Requires Attuning */
            requires_attuning?: boolean | null;
            cost?: components["schemas"]["Cost"] | null;
            /** Weight */
            weight?: number | null;
            /** Range */
            range?: string | null;
            /** Spells */
            spells?: components["schemas"]["e5_ItemSpell"][] | null;
            /** Source */
            source?: string | null;
            /** License */
            license?: string | null;
            /** Active */
            active: boolean;
            user?: components["schemas"]["User"] | null;
            /** Userid */
            userId?: string | null;
            stats?: components["schemas"]["e5_ItemStats"] | null;
            bonus?: components["schemas"]["e5_ItemBonus"] | null;
            modifiers?: components["schemas"]["e5_ItemModifiers"] | null;
            charges?: components["schemas"]["prisma__models__LimitedUse"] | null;
            /** Costid */
            costId?: number | null;
            /** E5 Statblock Item */
            e5_StatBlock_Item?: components["schemas"]["e5_StatBlock_Item"][] | null;
        };
        /**
         * e5_ItemBonus
         * @description Represents a e5_ItemBonus record
         */
        e5_ItemBonus: {
            /** Id */
            id: number;
            /** Hp */
            hp: number;
            /** Armor Class */
            armor_class: number;
            /** Damage Vulnerabilities */
            damage_vulnerabilities?: string | null;
            /** Damage Resistances */
            damage_resistances?: string | null;
            /** Damage Immunities */
            damage_immunities?: string | null;
            /** Condition Immunities */
            condition_immunities?: string | null;
            /** Senses */
            senses: string[];
            /** Proficiency */
            proficiency: string[];
            /** Actions */
            actions?: components["schemas"]["e5_Action"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["e5_BonusAction"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["e5_Reaction"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["e5_SpecialAbility"][] | null;
            item?: components["schemas"]["e5_Item"] | null;
            /** E5 Itemid */
            e5_ItemId: number;
            stats?: components["schemas"]["e5_Stats"] | null;
            speed?: components["schemas"]["e5_Speed"] | null;
            saving_throws?: components["schemas"]["e5_SavingThrows"] | null;
            skills?: components["schemas"]["e5_Skills"] | null;
        };
        /**
         * e5_ItemModifiers
         * @description Represents a e5_ItemModifiers record
         */
        e5_ItemModifiers: {
            /** Id */
            id: number;
            /** Stats */
            stats: unknown[];
            item?: components["schemas"]["e5_Item"] | null;
            /** E5 Itemid */
            e5_ItemId: number;
        };
        /**
         * e5_ItemSpell
         * @description Represents a e5_ItemSpell record
         */
        e5_ItemSpell: {
            /** Id */
            id: number;
            spell?: components["schemas"]["e5_Spell"] | null;
            /** Charges */
            charges: number;
            /** E5 Spellid */
            e5_SpellId?: string | null;
            e5_Item?: components["schemas"]["e5_Item"] | null;
            /** E5 Itemid */
            e5_ItemId?: number | null;
        };
        /**
         * e5_ItemStats
         * @description Represents a e5_ItemStats record
         */
        e5_ItemStats: {
            /** Id */
            id: number;
            armor_class?: components["schemas"]["e5_ArmorClass"] | null;
            hp?: components["schemas"]["e5_Hitpoints"] | null;
            /** Senses */
            senses: string[];
            /** Languages */
            languages: string[];
            /** Spell Dc */
            spell_dc?: string | null;
            /** Spell Attack */
            spell_attack?: string | null;
            /** Actions */
            actions?: components["schemas"]["e5_Action"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["e5_BonusAction"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["e5_Reaction"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["e5_SpecialAbility"][] | null;
            item?: components["schemas"]["e5_Item"] | null;
            /** E5 Itemid */
            e5_ItemId: number;
            stats?: components["schemas"]["e5_Stats"] | null;
            speed?: components["schemas"]["e5_Speed"] | null;
            saving_throws?: components["schemas"]["e5_SavingThrows"] | null;
            skills?: components["schemas"]["e5_Skills"] | null;
        };
        /**
         * e5_LairAction
         * @description Represents a e5_LairAction record
         */
        e5_LairAction: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * e5_LegendaryAction
         * @description Represents a e5_LegendaryAction record
         */
        e5_LegendaryAction: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * e5_MythicAction
         * @description Represents a e5_MythicAction record
         */
        e5_MythicAction: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * e5_Reaction
         * @description Represents a e5_Reaction record
         */
        e5_Reaction: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
            e5_ItemStats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
            e5_ItemBonus?: components["schemas"]["e5_ItemBonus"] | null;
            /** E5 Itembonusid */
            e5_ItemBonusId?: number | null;
        };
        /**
         * e5_SavingThrows
         * @description Represents a e5_SavingThrows record
         */
        e5_SavingThrows: {
            /** Id */
            id: string;
            /** Strength Save */
            strength_save?: number | null;
            /** Dexterity Save */
            dexterity_save?: number | null;
            /** Constitution Save */
            constitution_save?: number | null;
            /** Intelligence Save */
            intelligence_save?: number | null;
            /** Wisdom Save */
            wisdom_save?: number | null;
            /** Charisma Save */
            charisma_save?: number | null;
            /** E5 Statblock */
            e5_StatBlock?: components["schemas"]["e5_StatBlock"][] | null;
            item_bonuses?: components["schemas"]["e5_ItemBonus"] | null;
            item_stats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itembonusesid */
            e5_ItemBonusesId?: number | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
        };
        /**
         * e5_Skills
         * @description Represents a e5_Skills record
         */
        e5_Skills: {
            /** Id */
            id: string;
            /** Acrobatics */
            acrobatics?: number | null;
            /** Animal Handling */
            animal_handling?: number | null;
            /** Arcana */
            arcana?: number | null;
            /** Athletics */
            athletics?: number | null;
            /** Deception */
            deception?: number | null;
            /** History */
            history?: number | null;
            /** Insight */
            insight?: number | null;
            /** Intimidation */
            intimidation?: number | null;
            /** Investigation */
            investigation?: number | null;
            /** Medicine */
            medicine?: number | null;
            /** Nature */
            nature?: number | null;
            /** Perception */
            perception?: number | null;
            /** Performance */
            performance?: number | null;
            /** Persuasion */
            persuasion?: number | null;
            /** Religion */
            religion?: number | null;
            /** Sleight Of Hand */
            sleight_of_hand?: number | null;
            /** Stealth */
            stealth?: number | null;
            /** Survival */
            survival?: number | null;
            /** E5 Statblock */
            e5_StatBlock?: components["schemas"]["e5_StatBlock"][] | null;
            item_bonuses?: components["schemas"]["e5_ItemBonus"] | null;
            item_stats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itembonusesid */
            e5_ItemBonusesId?: number | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
        };
        /**
         * e5_SpecialAbility
         * @description Represents a e5_SpecialAbility record
         */
        e5_SpecialAbility: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus: string[];
            /** Damage Dice */
            damage_dice?: string | null;
            /** Use Proficiency */
            use_proficiency: boolean;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
            e5_ItemStats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
            e5_ItemBonus?: components["schemas"]["e5_ItemBonus"] | null;
            /** E5 Itembonusid */
            e5_ItemBonusId?: number | null;
        };
        /**
         * e5_Speed
         * @description Represents a e5_Speed record
         */
        e5_Speed: {
            /** Id */
            id: string;
            /** Walk */
            walk?: number | null;
            /** Fly */
            fly?: number | null;
            /** Swim */
            swim?: number | null;
            /** Climb */
            climb?: number | null;
            /** Burrow */
            burrow?: number | null;
            /** Hover */
            hover?: number | null;
            /** Lightwalking */
            lightwalking?: number | null;
            /** Notes */
            notes?: string | null;
            /** E5 Statblock */
            e5_StatBlock?: components["schemas"]["e5_StatBlock"][] | null;
            item_bonuses?: components["schemas"]["e5_ItemBonus"] | null;
            item_stats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itembonusesid */
            e5_ItemBonusesId?: number | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
        };
        /**
         * e5_Spell
         * @description Represents a e5_Spell record
         */
        e5_Spell: {
            /** Id */
            id: string;
            /** Slug */
            slug: string;
            /** Active */
            active: boolean;
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Higher Level */
            higher_level?: string | null;
            /** Range */
            range: string;
            /** Verbal */
            verbal: boolean;
            /** Somatic */
            somatic: boolean;
            /** Material */
            material: boolean;
            /** Materials */
            materials?: string | null;
            /** Ritual */
            ritual: boolean;
            /** Duration */
            duration: string;
            /** Concentration */
            concentration: boolean;
            /** Casting Time */
            casting_time: string;
            /** Dc */
            dc?: string | null;
            /** Is Attack */
            is_attack?: boolean | null;
            /** Level */
            level: number;
            user?: components["schemas"]["User"] | null;
            /** Userid */
            userId?: string | null;
            school?: components["schemas"]["e5_SpellSchool"] | null;
            /** Classes */
            classes?: components["schemas"]["e5_SpellClass"][] | null;
            /** Archetypes */
            archetypes?: components["schemas"]["e5_SpellArchetype"][] | null;
            /** Circles */
            circles?: components["schemas"]["e5_SpellCircle"][] | null;
            /** License */
            license?: string | null;
            /** E5 Spellschoolid */
            e5_SpellSchoolId: string;
            /** Statblock */
            statblock?: components["schemas"]["e5_StatBlock"][] | null;
            /** Source */
            source?: string | null;
            /** E5 Itemspell */
            e5_ItemSpell?: components["schemas"]["e5_ItemSpell"][] | null;
        };
        /**
         * e5_SpellArchetype
         * @description Represents a e5_SpellArchetype record
         */
        e5_SpellArchetype: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Spells */
            spells?: components["schemas"]["e5_Spell"][] | null;
        };
        /**
         * e5_SpellCircle
         * @description Represents a e5_SpellCircle record
         */
        e5_SpellCircle: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** E5 Spell */
            e5_Spell?: components["schemas"]["e5_Spell"][] | null;
        };
        /**
         * e5_SpellClass
         * @description Represents a e5_SpellClass record
         */
        e5_SpellClass: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Spells */
            spells?: components["schemas"]["e5_Spell"][] | null;
        };
        /**
         * e5_SpellSchool
         * @description Represents a e5_SpellSchool record
         */
        e5_SpellSchool: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** E5 Spell */
            e5_Spell?: components["schemas"]["e5_Spell"][] | null;
        };
        /**
         * e5_SpellSlots
         * @description Represents a e5_SpellSlots record
         */
        e5_SpellSlots: {
            /** Id */
            id: string;
            /** Level */
            level: number;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId: string;
        };
        /**
         * e5_StatBlock
         * @description Represents a e5_StatBlock record
         */
        e5_StatBlock: {
            /** Id */
            id: string;
            /** Slug */
            slug: string;
            /** External Id */
            external_id?: string | null;
            /** Name */
            name: string;
            /** About */
            about?: string | null;
            /** Size */
            size: string;
            /** Type */
            type: string;
            /** Subtype */
            subtype?: string | null;
            /** Group */
            group?: string | null;
            /** Alignment */
            alignment?: string | null;
            armor_class?: components["schemas"]["e5_ArmorClass"] | null;
            hp?: components["schemas"]["e5_Hitpoints"] | null;
            speed?: components["schemas"]["e5_Speed"] | null;
            stats?: components["schemas"]["e5_Stats"] | null;
            saving_throws?: components["schemas"]["e5_SavingThrows"] | null;
            /** Initiative */
            initiative?: number | null;
            /** Proficiency Bonus */
            proficiency_bonus?: number | null;
            skills?: components["schemas"]["e5_Skills"] | null;
            /** Damage Vulnerabilities */
            damage_vulnerabilities?: string | null;
            /** Damage Resistances */
            damage_resistances?: string | null;
            /** Damage Immunities */
            damage_immunities?: string | null;
            /** Condition Immunities */
            condition_immunities?: string | null;
            /** Senses */
            senses: string[];
            /** Languages */
            languages: string[];
            /** Items */
            items: string[];
            /** Equipment */
            equipment?: components["schemas"]["e5_StatBlock_Item"][] | null;
            /** Challenge Rating */
            challenge_rating?: string | null;
            /** Cr */
            cr?: number | null;
            /** Actions */
            actions?: components["schemas"]["e5_Action"][] | null;
            /** Bonus Actions */
            bonus_actions?: components["schemas"]["e5_BonusAction"][] | null;
            /** Lair Actions */
            lair_actions?: components["schemas"]["e5_LairAction"][] | null;
            /** Mythic Actions */
            mythic_actions?: components["schemas"]["e5_MythicAction"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["e5_Reaction"][] | null;
            /** Legendary Desc */
            legendary_desc?: string | null;
            /** Legendary Actions */
            legendary_actions?: components["schemas"]["e5_LegendaryAction"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["e5_SpecialAbility"][] | null;
            /** Spell Dc */
            spell_dc?: string | null;
            /** Spell Attack */
            spell_attack?: string | null;
            /** Spells */
            spells?: components["schemas"]["e5_Spell"][] | null;
            /** Limits */
            limits?: components["schemas"]["prisma__models__LimitedUse"][] | null;
            /** Spell Slots */
            spell_slots?: components["schemas"]["e5_SpellSlots"][] | null;
            /** Source */
            source?: string | null;
            /** License */
            license?: string | null;
            /** Active */
            active?: boolean | null;
            user?: components["schemas"]["User"] | null;
            /** Userid */
            userId?: string | null;
            /** E5 Speedid */
            e5_SpeedId: string;
            /** E5 Savingthrowsid */
            e5_SavingThrowsId: string;
            /** E5 Skillsid */
            e5_SkillsId?: string | null;
            /** E5 Hitpointsid */
            e5_HitpointsId: string;
            /** E5 Armorclassid */
            e5_ArmorClassId: string;
            /** E5 Statsid */
            e5_StatsId: string;
        };
        /**
         * e5_StatBlock_Item
         * @description Represents a e5_StatBlock_Item record
         */
        e5_StatBlock_Item: {
            /** Id */
            id: number;
            /** Equipped */
            equipped: boolean;
            /** Attuned */
            attuned: boolean;
            /** Loot */
            loot: boolean;
            /** Proficient */
            proficient: boolean;
            item?: components["schemas"]["e5_Item"] | null;
            statblock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Itemid */
            e5_ItemId: number;
            /** E5 Statblockid */
            e5_StatBlockId: string;
        };
        /**
         * e5_Stats
         * @description Represents a e5_Stats record
         */
        e5_Stats: {
            /** Id */
            id: string;
            /** Strength */
            strength?: number | null;
            /** Dexterity */
            dexterity?: number | null;
            /** Constitution */
            constitution?: number | null;
            /** Intelligence */
            intelligence?: number | null;
            /** Wisdom */
            wisdom?: number | null;
            /** Charisma */
            charisma?: number | null;
            /** E5 Statblock */
            e5_StatBlock?: components["schemas"]["e5_StatBlock"][] | null;
            item_bonus?: components["schemas"]["e5_ItemBonus"] | null;
            item_stats?: components["schemas"]["e5_ItemStats"] | null;
            /** E5 Itembonusesid */
            e5_ItemBonusesId?: number | null;
            /** E5 Itemstatsid */
            e5_ItemStatsId?: number | null;
        };
        /**
         * pf_Action
         * @description Represents a pf_Action record
         */
        pf_Action: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            type: components["schemas"]["pf_ActionType"];
            /** Description */
            description?: string | null;
            /** Damage */
            damage?: string | null;
            /** Trigger */
            trigger?: string | null;
            /** Requirements */
            requirements?: string | null;
            /** Effect */
            effect?: string | null;
            /** Frequency */
            frequency?: string | null;
            /** Success */
            success?: string | null;
            /** Critical Success */
            critical_success?: string | null;
            /** Failure */
            failure?: string | null;
            /** Critical Failure */
            critical_failure?: string | null;
            /** Constant */
            constant?: string | null;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            pf_StatBlock?: components["schemas"]["pf_StatBlock"] | null;
            /** Pf Statblockid */
            pf_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * pf_ActionType
         * @enum {string}
         */
        pf_ActionType: "FREE" | "ONE" | "TWO" | "THREE";
        /**
         * pf_ArmorClass
         * @description Represents a pf_ArmorClass record
         */
        pf_ArmorClass: {
            /** Id */
            id: string;
            /** Value */
            value: number;
            /** Special */
            special?: string | null;
            /** Pf Statblock */
            pf_StatBlock?: components["schemas"]["pf_StatBlock"][] | null;
        };
        /**
         * pf_Hitpoints
         * @description Represents a pf_Hitpoints record
         */
        pf_Hitpoints: {
            /** Id */
            id: string;
            /** Value */
            value: number;
            /** Special */
            special?: string | null;
            /** Pf Statblock */
            pf_StatBlock?: components["schemas"]["pf_StatBlock"][] | null;
        };
        /**
         * pf_Reaction
         * @description Represents a pf_Reaction record
         */
        pf_Reaction: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Trigger */
            trigger?: string | null;
            /** Frequency */
            frequency?: string | null;
            /** Requirements */
            requirements?: string | null;
            /** Effect */
            effect?: string | null;
            /** Damage */
            damage?: string | null;
            /** Success */
            success?: string | null;
            /** Critical Success */
            critical_success?: string | null;
            /** Failure */
            failure?: string | null;
            /** Critical Failure */
            critical_failure?: string | null;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            pf_StatBlock?: components["schemas"]["pf_StatBlock"] | null;
            /** Pf Statblockid */
            pf_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * pf_SavingThrows
         * @description Represents a pf_SavingThrows record
         */
        pf_SavingThrows: {
            /** Id */
            id: string;
            /** Fortitude */
            fortitude: number;
            /** Reflex */
            reflex: number;
            /** Will */
            will: number;
            /** Special */
            special?: string | null;
            /** Pf Statblock */
            pf_StatBlock?: components["schemas"]["pf_StatBlock"][] | null;
        };
        /**
         * pf_Skill
         * @description Represents a pf_Skill record
         */
        pf_Skill: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Value */
            value: string;
            pf_StatBlock?: components["schemas"]["pf_StatBlock"] | null;
            /** Pf Statblockid */
            pf_StatBlockId?: string | null;
        };
        /**
         * pf_SpecialAbility
         * @description Represents a pf_SpecialAbility record
         */
        pf_SpecialAbility: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description: string;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            pf_StatBlock?: components["schemas"]["pf_StatBlock"] | null;
            /** Pf Statblockid */
            pf_StatBlockId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * pf_Spell
         * @description Represents a pf_Spell record
         */
        pf_Spell: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Slug */
            slug: string;
            /** Active */
            active: boolean;
            info?: components["schemas"]["pf_SpellInfo"] | null;
            /** Traits */
            traits?: components["schemas"]["pf_SpellTrait"][] | null;
            /** Traditions */
            traditions?: components["schemas"]["pf_SpellTradition"][] | null;
            /** Bloodlines */
            bloodlines?: components["schemas"]["pf_SpellBloodline"][] | null;
            /** Deities */
            deities?: components["schemas"]["pf_SpellDeity"][] | null;
            /** Domains */
            domains?: components["schemas"]["pf_SpellDomain"][] | null;
            /** Mysteries */
            mysteries?: components["schemas"]["pf_SpellMystery"][] | null;
            /** Range */
            range?: string | null;
            /** Area */
            area?: string | null;
            /** Targets */
            targets?: string | null;
            /** Duration */
            duration?: string | null;
            /** Saving Throws */
            saving_throws?: string | null;
            /** Trigger */
            trigger?: string | null;
            cast?: components["schemas"]["pf_SpellCast"] | null;
            description?: components["schemas"]["pf_SpellDescription"] | null;
            /** Heightened */
            heightened?: components["schemas"]["pf_SpellHeightened"][] | null;
            /** License */
            license?: string | null;
            user?: components["schemas"]["User"] | null;
            /** Userid */
            userId?: string | null;
            /** Pf Spelllist */
            pf_SpellList?: components["schemas"]["pf_SpellList"][] | null;
            /** Pf Spellinfoid */
            pf_SpellInfoId?: string | null;
            /** Pf Spellcastid */
            pf_SpellCastId?: string | null;
            /** Pf Spelldescriptionid */
            pf_SpellDescriptionId?: string | null;
            /** Source */
            source?: string | null;
        };
        /**
         * pf_SpellBloodline
         * @description Represents a pf_SpellBloodline record
         */
        pf_SpellBloodline: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellCast
         * @description Represents a pf_SpellCast record
         */
        pf_SpellCast: {
            /** Id */
            id: string;
            /** Type */
            type: string;
            /** Somatic */
            somatic: boolean;
            /** Verbal */
            verbal: boolean;
            /** Material */
            material: boolean;
            /** Cost */
            cost?: string | null;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellCategory
         * @description Represents a pf_SpellCategory record
         */
        pf_SpellCategory: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Dc */
            dc?: number | null;
            /** Attack */
            attack?: number | null;
            /** Spell Lists */
            spell_lists?: components["schemas"]["pf_SpellList"][] | null;
            pf_StatBlock?: components["schemas"]["pf_StatBlock"] | null;
            /** Pf Statblockid */
            pf_StatBlockId?: string | null;
        };
        /**
         * pf_SpellDeity
         * @description Represents a pf_SpellDeity record
         */
        pf_SpellDeity: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellDescription
         * @description Represents a pf_SpellDescription record
         */
        pf_SpellDescription: {
            /** Id */
            id: string;
            /** Text */
            text: string;
            /** Details */
            details?: components["schemas"]["pf_SpellDescriptionDetail"][] | null;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellDescriptionDetail
         * @description Represents a pf_SpellDescriptionDetail record
         */
        pf_SpellDescriptionDetail: {
            /** Id */
            id: string;
            /** Title */
            title?: string | null;
            /** Text */
            text: string;
            pf_SpellDescription?: components["schemas"]["pf_SpellDescription"] | null;
            /** Pf Spelldescriptionid */
            pf_SpellDescriptionId?: string | null;
        };
        /**
         * pf_SpellDomain
         * @description Represents a pf_SpellDomain record
         */
        pf_SpellDomain: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellHeightened
         * @description Represents a pf_SpellHeightened record
         */
        pf_SpellHeightened: {
            /** Id */
            id: string;
            /** Modifier */
            modifier: string;
            /** Description */
            description: string;
            pf_Spell?: components["schemas"]["pf_Spell"] | null;
            /** Pf Spellid */
            pf_SpellId?: string | null;
        };
        /**
         * pf_SpellInfo
         * @description Represents a pf_SpellInfo record
         */
        pf_SpellInfo: {
            /** Id */
            id: string;
            /** Type */
            type: string;
            /** Level */
            level: number;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellList
         * @description Represents a pf_SpellList record
         */
        pf_SpellList: {
            /** Id */
            id: string;
            /** Type */
            type: string;
            /** Level */
            level: string;
            /** Spells */
            spells?: components["schemas"]["pf_Spell"][] | null;
            limit?: components["schemas"]["prisma__models__LimitedUse"] | null;
            pf_SpellCategory?: components["schemas"]["pf_SpellCategory"] | null;
            /** Pf Spellcategoryid */
            pf_SpellCategoryId?: string | null;
            /** Limiteduseid */
            limitedUseId?: string | null;
        };
        /**
         * pf_SpellMystery
         * @description Represents a pf_SpellMystery record
         */
        pf_SpellMystery: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellTradition
         * @description Represents a pf_SpellTradition record
         */
        pf_SpellTradition: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_SpellTrait
         * @description Represents a pf_SpellTrait record
         */
        pf_SpellTrait: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Pf Spell */
            pf_Spell?: components["schemas"]["pf_Spell"][] | null;
        };
        /**
         * pf_StatBlock
         * @description Represents a pf_StatBlock record
         */
        pf_StatBlock: {
            /** Id */
            id: string;
            /** Slug */
            slug: string;
            /** Active */
            active?: boolean | null;
            /** Name */
            name: string;
            /** Type */
            type: string;
            /** Level */
            level: number;
            /** Traits */
            traits?: components["schemas"]["pf_Trait"][] | null;
            /** Senses */
            senses: string[];
            /** Perception */
            perception?: string | null;
            /** Languages */
            languages: string[];
            /** Skills */
            skills?: components["schemas"]["pf_Skill"][] | null;
            stats?: components["schemas"]["pf_Stats"] | null;
            /** Items */
            items: string[];
            armor_class?: components["schemas"]["pf_ArmorClass"] | null;
            hp?: components["schemas"]["pf_Hitpoints"] | null;
            saving_throws?: components["schemas"]["pf_SavingThrows"] | null;
            /** Immunities */
            immunities: string[];
            /** Weaknesses */
            weaknesses: string[];
            /** Resistances */
            resistances: string[];
            /** Speed */
            speed: string;
            /** Actions */
            actions?: components["schemas"]["pf_Action"][] | null;
            /** Reactions */
            reactions?: components["schemas"]["pf_Reaction"][] | null;
            /** Special Abilities */
            special_abilities?: components["schemas"]["pf_SpecialAbility"][] | null;
            /** Spells */
            spells?: components["schemas"]["pf_SpellCategory"][] | null;
            /** About */
            about?: string | null;
            /** License */
            license?: string | null;
            user?: components["schemas"]["User"] | null;
            /** Userid */
            userId?: string | null;
            /** Source */
            source?: string | null;
            /** Limits */
            limits?: components["schemas"]["prisma__models__LimitedUse"][] | null;
            /** Pf Hitpointsid */
            pf_HitpointsId: string;
            /** Pf Savingthrowsid */
            pf_SavingThrowsId: string;
            /** Pf Armorclassid */
            pf_ArmorClassId: string;
            /** Pf Statsid */
            pf_StatsId: string;
        };
        /**
         * pf_Stats
         * @description Represents a pf_Stats record
         */
        pf_Stats: {
            /** Id */
            id: string;
            /** Strength */
            strength: number;
            /** Dexterity */
            dexterity: number;
            /** Constitution */
            constitution: number;
            /** Intelligence */
            intelligence: number;
            /** Wisdom */
            wisdom: number;
            /** Charisma */
            charisma: number;
            /** Pf Statblock */
            pf_StatBlock?: components["schemas"]["pf_StatBlock"][] | null;
        };
        /**
         * pf_Trait
         * @description Represents a pf_Trait record
         */
        pf_Trait: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Value */
            value: string;
            /** Pf Statblock */
            pf_StatBlock?: components["schemas"]["pf_StatBlock"][] | null;
        };
        /**
         * LimitedUse
         * @description Represents a LimitedUse record
         */
        prisma__models__LimitedUse: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Uses */
            uses: number;
            /** Resets */
            resets: string[];
            pf_StatBlock?: components["schemas"]["pf_StatBlock"] | null;
            /** Pf Statblockid */
            pf_StatBlockId?: string | null;
            /** Pf Action */
            pf_Action?: components["schemas"]["pf_Action"][] | null;
            /** Pf Reaction */
            pf_Reaction?: components["schemas"]["pf_Reaction"][] | null;
            /** Pf Specialability */
            pf_SpecialAbility?: components["schemas"]["pf_SpecialAbility"][] | null;
            /** Pf Spelllist */
            pf_SpellList?: components["schemas"]["pf_SpellList"][] | null;
            e5_StatBlock?: components["schemas"]["e5_StatBlock"] | null;
            /** E5 Statblockid */
            e5_StatBlockId?: string | null;
            /** E5 Action */
            e5_Action?: components["schemas"]["e5_Action"][] | null;
            /** E5 Bonusaction */
            e5_BonusAction?: components["schemas"]["e5_BonusAction"][] | null;
            /** E5 Lairaction */
            e5_LairAction?: components["schemas"]["e5_LairAction"][] | null;
            /** E5 Mythicaction */
            e5_MythicAction?: components["schemas"]["e5_MythicAction"][] | null;
            /** E5 Reaction */
            e5_Reaction?: components["schemas"]["e5_Reaction"][] | null;
            /** E5 Legendaryaction */
            e5_LegendaryAction?: components["schemas"]["e5_LegendaryAction"][] | null;
            /** E5 Specialability */
            e5_SpecialAbility?: components["schemas"]["e5_SpecialAbility"][] | null;
            /** E5 Spellslots */
            e5_SpellSlots?: components["schemas"]["e5_SpellSlots"][] | null;
            item?: components["schemas"]["e5_Item"] | null;
            /** E5 Itemid */
            e5_ItemId?: number | null;
        };
        /**
         * Stats
         * @description Represents a Stats record
         */
        prisma__models__Stats: {
            /** Id */
            id: string;
            /** Get */
            get: number;
            /** List */
            list: number;
            /** Search */
            search: number;
            /** Put */
            put: number;
            /** Delete */
            delete: number;
            /** Edit */
            edit: number;
            User?: components["schemas"]["User"] | null;
            /** Userid */
            userId: string;
        };
        /** LimitedUse */
        src__types__base__LimitedUse: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Uses */
            uses: number;
            /** Resets */
            resets?: string[];
        };
        /** Action */
        "src__types__e5__base__Action-Input": {
            /** Name */
            name: string;
            /** Desc */
            desc: string;
            /** Attack Bonus */
            attack_bonus?: number | null;
            /** Stat Bonus */
            stat_bonus?: ("STR" | "DEX" | "CON" | "INT" | "WIS" | "CHA")[] | null;
            /** Use Proficiency */
            use_proficiency?: boolean | null;
            /** Damage Dice */
            damage_dice?: string | null;
            limit?: components["schemas"]["LimitedUse-Input"] | null;
        };
        /** Hitpoints */
        src__types__e5__base__Hitpoints: {
            /** Value */
            value: number;
            /** Hit Dice */
            hit_dice?: string | null;
        };
        /** SavingThrows */
        src__types__e5__base__SavingThrows: {
            /** Strength Save */
            strength_save?: number | null;
            /** Dexterity Save */
            dexterity_save?: number | null;
            /** Constitution Save */
            constitution_save?: number | null;
            /** Intelligence Save */
            intelligence_save?: number | null;
            /** Wisdom Save */
            wisdom_save?: number | null;
            /** Charisma Save */
            charisma_save?: number | null;
        };
        /** Stats */
        src__types__e5__base__Stats: {
            /** Strength */
            strength?: number | null;
            /** Dexterity */
            dexterity?: number | null;
            /** Constitution */
            constitution?: number | null;
            /** Intelligence */
            intelligence?: number | null;
            /** Wisdom */
            wisdom?: number | null;
            /** Charisma */
            charisma?: number | null;
        };
        /** Spell */
        src__types__e5__spell__Spell: {
            /** Name */
            name: string;
            /**
             * Desc
             * @default
             */
            desc: string | null;
            /**
             * Higher Level
             * @default
             */
            higher_level: string | null;
            /** Range */
            range: string;
            /** Verbal */
            verbal?: boolean | null;
            /** Somatic */
            somatic?: boolean | null;
            /** Material */
            material?: boolean | null;
            /** Materials */
            materials?: string | null;
            /** Ritual */
            ritual?: boolean | null;
            /** Duration */
            duration: string;
            /** Concentration */
            concentration?: boolean | null;
            /** Casting Time */
            casting_time: string;
            /** Level */
            level: number;
            /** Is Attack */
            is_attack?: boolean | null;
            /** Dc */
            dc?: string | null;
            school: components["schemas"]["SpellSchool"];
            /** Classes */
            classes?: components["schemas"]["SpellClass"][];
            /** Archetypes */
            archetypes?: components["schemas"]["SpellArchetype"][];
            /** Circles */
            circles?: components["schemas"]["SpellCircle"][];
            /** Slug */
            slug: string;
            /** Active */
            active: boolean;
            /** Source */
            source?: string | null;
        };
        /** SpellIn */
        src__types__e5__spell__SpellIn: {
            /** Name */
            name: string;
            /**
             * Desc
             * @default
             */
            desc: string | null;
            /**
             * Higher Level
             * @default
             */
            higher_level: string | null;
            /** Range */
            range: string;
            /** Verbal */
            verbal?: boolean | null;
            /** Somatic */
            somatic?: boolean | null;
            /** Material */
            material?: boolean | null;
            /** Materials */
            materials?: string | null;
            /** Ritual */
            ritual?: boolean | null;
            /** Duration */
            duration: string;
            /** Concentration */
            concentration?: boolean | null;
            /** Casting Time */
            casting_time: string;
            /** Level */
            level: number;
            /** Is Attack */
            is_attack?: boolean | null;
            /** Dc */
            dc?: string | null;
            /** School */
            school: string;
            /** Classes */
            classes?: string[] | null;
            /** Archetypes */
            archetypes?: string[] | null;
            /** Circles */
            circles?: string[] | null;
        };
        /** Spell */
        src__types__pf__spell__Spell: {
            /** Name */
            name: string;
            info: components["schemas"]["Info"];
            /** Traits */
            traits: components["schemas"]["SpellTrait"][];
            /** Traditions */
            traditions: components["schemas"]["Tradition"][];
            /** Bloodlines */
            bloodlines: components["schemas"]["Bloodline"][];
            /** Deities */
            deities: components["schemas"]["Deity"][];
            /** Domains */
            domains: components["schemas"]["Domain"][];
            /** Mysteries */
            mysteries: components["schemas"]["Mystery"][];
            /** Range */
            range?: string | null;
            /** Area */
            area?: string | null;
            /** Targets */
            targets?: string | null;
            /** Duration */
            duration?: string | null;
            /** Saving Throws */
            saving_throws?: string | null;
            /** Trigger */
            trigger?: string | null;
            cast: components["schemas"]["Cast"];
            description?: components["schemas"]["Description"] | null;
            /** Heightened */
            heightened?: components["schemas"]["Heightened"][] | null;
            /** Slug */
            slug: string;
            /** License */
            license?: string | null;
            /** Active */
            active: boolean;
            /** Source */
            source?: string | null;
        };
        /** SpellIn */
        src__types__pf__spell__SpellIn: {
            /** Name */
            name: string;
            info: components["schemas"]["Info"];
            /** Traits */
            traits?: string[] | null;
            /** Traditions */
            traditions?: string[] | null;
            /** Bloodlines */
            bloodlines?: string[] | null;
            /** Deities */
            deities?: string[] | null;
            /** Domains */
            domains?: string[] | null;
            /** Mysteries */
            mysteries?: string[] | null;
            /** Range */
            range?: string | null;
            /** Area */
            area?: string | null;
            /** Targets */
            targets?: string | null;
            /** Duration */
            duration?: string | null;
            /** Saving Throws */
            saving_throws?: string | null;
            /** Trigger */
            trigger?: string | null;
            cast: components["schemas"]["Cast"];
            description?: components["schemas"]["Description"] | null;
            /** Heightened */
            heightened?: components["schemas"]["Heightened"][] | null;
        };
        /** Action */
        src__types__pf__statblock__Action: {
            /** Name */
            name: string;
            type: components["schemas"]["ActionTypeEnum"];
            /** Description */
            description?: string | null;
            /** Damage */
            damage?: string | null;
            /** Trigger */
            trigger?: string | null;
            /** Requirements */
            requirements?: string | null;
            /** Effect */
            effect?: string | null;
            /** Frequency */
            frequency?: string | null;
            /** Success */
            success?: string | null;
            /** Critical Success */
            critical_success?: string | null;
            /** Failure */
            failure?: string | null;
            /** Critical Failure */
            critical_failure?: string | null;
            /** Constant */
            constant?: string | null;
            limit?: components["schemas"]["LimitedUse-Input"] | null;
        };
        /** Hitpoints */
        src__types__pf__statblock__Hitpoints: {
            /** Value */
            value: number;
            /** Special */
            special?: string | null;
        };
        /** SavingThrows */
        src__types__pf__statblock__SavingThrows: {
            /** Fortitude */
            fortitude: number;
            /** Reflex */
            reflex: number;
            /** Will */
            will: number;
            /** Special */
            special?: string | null;
        };
        /** Stats */
        src__types__pf__statblock__Stats: {
            /** Strength */
            strength: number;
            /** Dexterity */
            dexterity: number;
            /** Constitution */
            constitution: number;
            /** Intelligence */
            intelligence: number;
            /** Wisdom */
            wisdom: number;
            /** Charisma */
            charisma: number;
        };
        /** Stats */
        src__types__types__Stats: {
            /** Users */
            users: number;
            /** Statblocks */
            statblocks: number;
            /** Spells */
            spells: number;
            /** Items */
            items: number;
            /** Patreon */
            patreon?: number | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    login_for_access_token_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_access_token_refresh_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    reset_password_password_reset_post: {
        parameters: {
            query: {
                email: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_activation_mail_activation_link_post: {
        parameters: {
            query: {
                username: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stats_stats__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__types__Stats"];
                };
            };
        };
    };
    create_user_api_v1_users__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPartial"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_roles_api_v1_users__user_id__roles_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_users_me_api_v1_users_me__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithScopes"];
                };
            };
        };
    };
    update_user_api_v1_users_me__patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_api_keys_api_v1_users_me_api_keys_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithApiKey"];
                };
            };
        };
    };
    update_api_keys_api_v1_users_me_api_keys_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithApiKey"];
                };
            };
        };
    };
    update_api_keys_api_v1_users_me_api_keys_delete: {
        parameters: {
            query: {
                api_key: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithApiKey"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_statblocks_api_v1_users_me_statblocks_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserStatblocks"];
                };
            };
        };
    };
    list_spells_api_v1_users_me_spells_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserSpells"];
                };
            };
        };
    };
    list_items_api_v1_users_me_items_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["e5_Item"][];
                };
            };
        };
    };
    change_password_api_v1_users_change_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordResetIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    activate_user_api_v1_users_activate_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_user_settings_api_v1_users_me_settings_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    put_user_settings_api_v1_users_me_settings_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Settings"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_pf_statblocks_api_v1_pf_statblock__get: {
        parameters: {
            query?: {
                take?: number | null;
                skip?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PFStatblockOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_pf_statblock_api_v1_pf_statblock__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PFStatblockIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PFStatblockOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_pf_statblock_api_v1_pf_statblock_search__get: {
        parameters: {
            query?: {
                name?: string;
                type?: string;
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PFStatblockOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_pf_statblock_slug_api_v1_pf_statblock__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PFStatblockOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    edit_pf_statblock_api_v1_pf_statblock__slug__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PFStatblockIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_pf_statblock_api_v1_pf_statblock__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_active_pf_statblock_api_v1_pf_statblock__slug__active_put: {
        parameters: {
            query: {
                active: boolean;
            };
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_pf_spells_api_v1_pf_spell__get: {
        parameters: {
            query?: {
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__pf__spell__Spell"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_spell_api_v1_pf_spell__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["src__types__pf__spell__SpellIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__pf__spell__Spell"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_pf_spell_api_v1_pf_spell_search_get: {
        parameters: {
            query?: {
                name?: string;
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__pf__spell__Spell"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_pf_spells_slug_api_v1_pf_spell__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__pf__spell__Spell"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_pf_spell_api_v1_pf_spell__slug__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["src__types__pf__spell__SpellIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_pf_spell_api_v1_pf_spell__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_e5_statblocks_api_v1_e5_statblock__get: {
        parameters: {
            query?: {
                take?: number | null;
                skip?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["E5StatblockOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_e5_statblock_api_v1_e5_statblock__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["E5StatblockIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["E5StatblockOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_e5_creature_api_v1_e5_statblock_search__get: {
        parameters: {
            query?: {
                search_string?: string;
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["E5StatblockOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_e5_statblock_slug_api_v1_e5_statblock__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["E5StatblockOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    edit_e5_statblock_api_v1_e5_statblock__slug__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["E5StatblockIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_e5_statblock_api_v1_e5_statblock__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_active_e5_statblock_api_v1_e5_statblock__slug__active_put: {
        parameters: {
            query: {
                active: boolean;
            };
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_statblock_from_external_source_api_v1_e5_statblock_external_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ExternalIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_e5_spells_api_v1_e5_spell__get: {
        parameters: {
            query?: {
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__e5__spell__Spell"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_spell_api_v1_e5_spell__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["src__types__e5__spell__SpellIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__e5__spell__Spell"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_e5_spell_api_v1_e5_spell_search_get: {
        parameters: {
            query?: {
                search_string?: string;
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__e5__spell__Spell"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_e5_spells_slug_api_v1_e5_spell__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["src__types__e5__spell__Spell"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_e5_spell_api_v1_e5_spell__slug__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["src__types__e5__spell__SpellIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_e5_spell_api_v1_e5_spell__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_e5_encounters_api_v1_e5_encounter__get: {
        parameters: {
            query: {
                rooms: number;
                challenge_rating: number;
                creature_type?: string | null;
                include_boss?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["E5StatblockOut"][][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_e5_items_api_v1_e5_item__get: {
        parameters: {
            query?: {
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_item_api_v1_e5_item__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_items_api_v1_e5_item_search_get: {
        parameters: {
            query?: {
                search_string?: string;
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_e5_item_slug_api_v1_e5_item__slug__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_item_api_v1_e5_item__slug__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    edit_item_api_v1_e5_item__slug__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemIn"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ItemOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_legal_legal__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_users_admin_users_get: {
        parameters: {
            query?: {
                take?: number;
                skip?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserAdminInfo"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_users_admin_users_search_get: {
        parameters: {
            query?: {
                email?: string | null;
                username?: string | null;
                scopes?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserAdminInfo"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_admin_users__username__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                username: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithScopes"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
